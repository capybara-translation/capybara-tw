# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'capybara_tw/gui/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(969, 794)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralGridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.centralGridLayout.setContentsMargins(0, 0, 0, 0)
        self.centralGridLayout.setVerticalSpacing(2)
        self.centralGridLayout.setObjectName("centralGridLayout")
        self.filesComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.filesComboBox.setFrame(True)
        self.filesComboBox.setObjectName("filesComboBox")
        self.centralGridLayout.addWidget(self.filesComboBox, 0, 1, 1, 1)
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setMinimumSize(QtCore.QSize(0, 0))
        self.splitter.setFrameShadow(QtWidgets.QFrame.Plain)
        self.splitter.setLineWidth(1)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setOpaqueResize(True)
        self.splitter.setHandleWidth(4)
        self.splitter.setChildrenCollapsible(True)
        self.splitter.setObjectName("splitter")
        self.editorGridWidget = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.editorGridWidget.sizePolicy().hasHeightForWidth())
        self.editorGridWidget.setSizePolicy(sizePolicy)
        self.editorGridWidget.setMinimumSize(QtCore.QSize(300, 0))
        self.editorGridWidget.setObjectName("editorGridWidget")
        self.editorGridLayout = QtWidgets.QGridLayout(self.editorGridWidget)
        self.editorGridLayout.setContentsMargins(0, 0, 0, 0)
        self.editorGridLayout.setVerticalSpacing(2)
        self.editorGridLayout.setObjectName("editorGridLayout")
        self.nextEditor = TagEditor(self.editorGridWidget)
        self.nextEditor.setStyleSheet("QTextEdit {\n"
"    background: #e6e6e6\n"
"}")
        self.nextEditor.setObjectName("nextEditor")
        self.editorGridLayout.addWidget(self.nextEditor, 3, 0, 1, 1)
        self.srcEditor = TagEditor(self.editorGridWidget)
        self.srcEditor.setObjectName("srcEditor")
        self.editorGridLayout.addWidget(self.srcEditor, 1, 0, 1, 1)
        self.tgtEditor = TagEditor(self.editorGridWidget)
        self.tgtEditor.setObjectName("tgtEditor")
        self.editorGridLayout.addWidget(self.tgtEditor, 2, 0, 1, 1)
        self.prevEditor = TagEditor(self.editorGridWidget)
        self.prevEditor.setStyleSheet("QTextEdit {\n"
"    background: #e6e6e6\n"
"}")
        self.prevEditor.setObjectName("prevEditor")
        self.editorGridLayout.addWidget(self.prevEditor, 0, 0, 1, 1)
        self.translationGrid = TranslationGrid(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.translationGrid.sizePolicy().hasHeightForWidth())
        self.translationGrid.setSizePolicy(sizePolicy)
        self.translationGrid.setStyleSheet("QTableView:!active {\n"
"    selection-background-color: palette(highlight);\n"
"    selection-color: palette(highlighted-text)\n"
"}\n"
"")
        self.translationGrid.setObjectName("translationGrid")
        self.centralGridLayout.addWidget(self.splitter, 1, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 969, 22))
        self.menubar.setObjectName("menubar")
        self.menuFormat = QtWidgets.QMenu(self.menubar)
        self.menuFormat.setObjectName("menuFormat")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuNavigate = QtWidgets.QMenu(self.menubar)
        self.menuNavigate.setObjectName("menuNavigate")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setIconSize(QtCore.QSize(16, 16))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionBold = QtWidgets.QAction(MainWindow)
        self.actionBold.setCheckable(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/bold.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBold.setIcon(icon)
        self.actionBold.setIconVisibleInMenu(True)
        self.actionBold.setShortcutVisibleInContextMenu(True)
        self.actionBold.setObjectName("actionBold")
        self.actionItalic = QtWidgets.QAction(MainWindow)
        self.actionItalic.setCheckable(True)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/italic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionItalic.setIcon(icon1)
        self.actionItalic.setIconVisibleInMenu(True)
        self.actionItalic.setShortcutVisibleInContextMenu(True)
        self.actionItalic.setObjectName("actionItalic")
        self.actionUnderlined = QtWidgets.QAction(MainWindow)
        self.actionUnderlined.setCheckable(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/underlined.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUnderlined.setIcon(icon2)
        self.actionUnderlined.setIconVisibleInMenu(True)
        self.actionUnderlined.setShortcutVisibleInContextMenu(True)
        self.actionUnderlined.setObjectName("actionUnderlined")
        self.actionSubscript = QtWidgets.QAction(MainWindow)
        self.actionSubscript.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/subscript.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubscript.setIcon(icon3)
        self.actionSubscript.setIconVisibleInMenu(True)
        self.actionSubscript.setShortcutVisibleInContextMenu(True)
        self.actionSubscript.setObjectName("actionSubscript")
        self.actionSuperscript = QtWidgets.QAction(MainWindow)
        self.actionSuperscript.setCheckable(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/superscript.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSuperscript.setIcon(icon4)
        self.actionSuperscript.setIconVisibleInMenu(True)
        self.actionSuperscript.setShortcutVisibleInContextMenu(True)
        self.actionSuperscript.setObjectName("actionSuperscript")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon5)
        self.actionOpen.setShortcutVisibleInContextMenu(True)
        self.actionOpen.setObjectName("actionOpen")
        self.actionDisplayHiddenCharacters = QtWidgets.QAction(MainWindow)
        self.actionDisplayHiddenCharacters.setCheckable(True)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/paragraph.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDisplayHiddenCharacters.setIcon(icon6)
        self.actionDisplayHiddenCharacters.setObjectName("actionDisplayHiddenCharacters")
        self.actionMoveToPreviousSegment = QtWidgets.QAction(MainWindow)
        self.actionMoveToPreviousSegment.setShortcutVisibleInContextMenu(True)
        self.actionMoveToPreviousSegment.setObjectName("actionMoveToPreviousSegment")
        self.actionMoveToNextSegment = QtWidgets.QAction(MainWindow)
        self.actionMoveToNextSegment.setIconVisibleInMenu(True)
        self.actionMoveToNextSegment.setShortcutVisibleInContextMenu(True)
        self.actionMoveToNextSegment.setObjectName("actionMoveToNextSegment")
        self.actionMoveToFirstSegment = QtWidgets.QAction(MainWindow)
        self.actionMoveToFirstSegment.setShortcutVisibleInContextMenu(True)
        self.actionMoveToFirstSegment.setObjectName("actionMoveToFirstSegment")
        self.actionMoveToLastSegment = QtWidgets.QAction(MainWindow)
        self.actionMoveToLastSegment.setShortcutVisibleInContextMenu(True)
        self.actionMoveToLastSegment.setObjectName("actionMoveToLastSegment")
        self.actionConfirmSegment = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/confirm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConfirmSegment.setIcon(icon7)
        self.actionConfirmSegment.setShortcutVisibleInContextMenu(True)
        self.actionConfirmSegment.setObjectName("actionConfirmSegment")
        self.actionUnconfirmSegment = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icon/unconfirm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUnconfirmSegment.setIcon(icon8)
        self.actionUnconfirmSegment.setShortcutVisibleInContextMenu(True)
        self.actionUnconfirmSegment.setObjectName("actionUnconfirmSegment")
        self.menuFormat.addAction(self.actionBold)
        self.menuFormat.addAction(self.actionItalic)
        self.menuFormat.addAction(self.actionUnderlined)
        self.menuFormat.addAction(self.actionSubscript)
        self.menuFormat.addAction(self.actionSuperscript)
        self.menuFormat.addAction(self.actionDisplayHiddenCharacters)
        self.menuEdit.addAction(self.actionConfirmSegment)
        self.menuEdit.addAction(self.actionUnconfirmSegment)
        self.menuFile.addAction(self.actionOpen)
        self.menuNavigate.addAction(self.actionMoveToPreviousSegment)
        self.menuNavigate.addAction(self.actionMoveToNextSegment)
        self.menuNavigate.addAction(self.actionMoveToFirstSegment)
        self.menuNavigate.addAction(self.actionMoveToLastSegment)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuFormat.menuAction())
        self.menubar.addAction(self.menuNavigate.menuAction())
        self.toolBar.addAction(self.actionBold)
        self.toolBar.addAction(self.actionItalic)
        self.toolBar.addAction(self.actionUnderlined)
        self.toolBar.addAction(self.actionSubscript)
        self.toolBar.addAction(self.actionSuperscript)
        self.toolBar.addAction(self.actionDisplayHiddenCharacters)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionConfirmSegment)
        self.toolBar.addAction(self.actionUnconfirmSegment)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Capybara Translation Workbench"))
        self.menuFormat.setTitle(_translate("MainWindow", "Format"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuNavigate.setTitle(_translate("MainWindow", "Navigate"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionBold.setText(_translate("MainWindow", "Bold"))
        self.actionBold.setToolTip(_translate("MainWindow", "Bold"))
        self.actionBold.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionItalic.setText(_translate("MainWindow", "Italic"))
        self.actionItalic.setToolTip(_translate("MainWindow", "Italic"))
        self.actionItalic.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionUnderlined.setText(_translate("MainWindow", "Underlined"))
        self.actionUnderlined.setToolTip(_translate("MainWindow", "Underlined"))
        self.actionUnderlined.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionSubscript.setText(_translate("MainWindow", "Subscript"))
        self.actionSubscript.setToolTip(_translate("MainWindow", "Subscript"))
        self.actionSubscript.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionSuperscript.setText(_translate("MainWindow", "Superscript"))
        self.actionSuperscript.setShortcut(_translate("MainWindow", "Ctrl+Shift+_"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionDisplayHiddenCharacters.setText(_translate("MainWindow", "Display hidden characters"))
        self.actionMoveToPreviousSegment.setText(_translate("MainWindow", "Move to previous segment"))
        self.actionMoveToPreviousSegment.setShortcut(_translate("MainWindow", "Ctrl+Up"))
        self.actionMoveToNextSegment.setText(_translate("MainWindow", "Move to next segment"))
        self.actionMoveToNextSegment.setShortcut(_translate("MainWindow", "Ctrl+Down"))
        self.actionMoveToFirstSegment.setText(_translate("MainWindow", "Move to first segment"))
        self.actionMoveToFirstSegment.setShortcut(_translate("MainWindow", "Ctrl+Home"))
        self.actionMoveToLastSegment.setText(_translate("MainWindow", "Move to last segment"))
        self.actionMoveToLastSegment.setShortcut(_translate("MainWindow", "Ctrl+End"))
        self.actionConfirmSegment.setText(_translate("MainWindow", "Confirm segment"))
        self.actionConfirmSegment.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.actionUnconfirmSegment.setText(_translate("MainWindow", "Unconfirm segment"))
        self.actionUnconfirmSegment.setShortcut(_translate("MainWindow", "Ctrl+Shift+Return"))
from capybara_tw.gui.tageditor import TagEditor
from capybara_tw.gui.translation_grid import TranslationGrid
from . import resources_rc
